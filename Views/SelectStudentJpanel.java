import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.swing.JFrame;


public class SelectStudentJpanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public SelectStudentJpanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	selectStudentComboBox = new javax.swing.JComboBox();
        selectStudentButton = new javax.swing.JButton();
        selectStudentLabel = new javax.swing.JLabel();
        back11 = new javax.swing.JButton();
        setOpaque(false);
        selectStudentComboBox.setFont(new java.awt.Font("Aharoni", 0, 14)); // NOI18N
           
        selectStudentButton.setBackground(new java.awt.Color(255, 102, 102));
        selectStudentButton.setFont(new java.awt.Font("Aharoni", 1, 18)); // NOI18N
        selectStudentButton.setText("SELECT STUDENT");

        selectStudentLabel.setFont(new java.awt.Font("Aharoni", 1, 18)); // NOI18N
        selectStudentLabel.setForeground(new java.awt.Color(0, 0, 204));
        selectStudentLabel.setText("SELECT STUDENT");

        back11.setText("Back");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(selectStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back11)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(selectStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(back11)
                .addGap(44, 44, 44)
                .addComponent(selectStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE)
                .addComponent(selectStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("PersistenceUnit");
		EntityManager manager = emf.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		ArrayList<String> studentList = new ArrayList<String>();
		String student = "";
		transaction.begin();
		TypedQuery<Object []> query = manager.createQuery("SELECT e.student_id,e.student_name FROM student e", Object[].class);
    	List<Object []> result1 = query.getResultList();
		for (Object[] data : result1){
			student = String.valueOf(data[0]) + " - " + String.valueOf(data[1]);
			selectStudentComboBox.addItem(student);
			}

    }
    
    /*private void selectStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
    	String s = String.valueOf(selectStudentComboBox.getSelectedItem());
    	String[] splits = s.split("-");
    	s = splits[0];
    	System.out.println(s);
    	EntityManagerFactory emf1 = Persistence.createEntityManagerFactory("PersistenceUnit");
    	EntityManager manager = emf1.createEntityManager();
    	EntityTransaction transaction1 = manager.getTransaction();
    	transaction1.begin();
    	Query query1 = manager.createQuery("UPDATE student e SET e.flag = 1 where e.student_id = :sid");
    	query1.setParameter("sid", s);
    	query1.executeUpdate();
    	transaction1.commit();
    }*/
    public static void main(String[] args) {
    	JFrame window = new JFrame("Test");
    	window.setSize(500,500);
    	SelectStudentJpanel selectStudentPanel = new SelectStudentJpanel();
    	window.setContentPane(selectStudentPanel);
  	  	window.setVisible(true);
    	EntityManagerFactory emf = Persistence.createEntityManagerFactory("PersistenceUnit");
    	EntityManager manager = emf.createEntityManager();
    	EntityTransaction transaction = manager.getTransaction();
    	ArrayList<String> studentList = new ArrayList<String>();
    	String student = "";
    	transaction.begin();
		TypedQuery<Object []> query = manager.createQuery("SELECT e.student_id,e.student_name FROM student e", Object[].class);
    	List<Object []> result1 = query.getResultList();
		for (Object[] data : result1){
			student = String.valueOf(data[0]) + "-" + String.valueOf(data[1]);
			selectStudentPanel.selectStudentComboBox.addItem(student);
    	}
		
    }
    // Variables declaration - do not modify                     
    public javax.swing.JComboBox selectStudentComboBox;
    public javax.swing.JLabel selectStudentLabel;
    public javax.swing.JButton selectStudentButton;
    public javax.swing.JButton back11;
    // End of variables declaration 
    
    
}
